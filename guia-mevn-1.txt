Guia para la instalacion de MEVN

1) creamos la carpeta del proyecto
2) Inicializamos el package.json con npm init --yes
3) Agregamos express npm i  express --save
4) Creamos el archivo app.js con el siguiente contenido:

const express = require ('express');
const app = express();

//capturamos con get url 
app.get('/', function (req, res) {
    res.send('Hola mundo');
})

let puerto = process.env.port || 3000; //el puerto se asigna automaticamente si el entorno lo define

app.listen(puerto, function () {
    console.log('Escuchando peticiones en el puerto: ' + puerto + '...');
})
//-----------------------------------------
5) ejecutamos con node app.js
6) Para evitar reiniciar el servidor ante cada modificacion del codigo instalamos nodemon
   npm i nodemon --save
7) Agregamos el script dev a package.json
 "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "dev": "nodemon app.js"
  },
 ----------------------------------
 guardamos 
 8) ejecutamos con npm run dev
 9) instalamos morgan para registro automatizado de peticion y respuestas que seran visualizadas
    en la consola
    npm i morgan --save
 10) Modificamos app.js 
     const morgan = require('morgan');
     app.use(morgan('tiny'));
     ------------------------------
     Ahora comprobamos mejor las peticiones a traves del puerto 3000
  11) Para evitar bloqueos al hacer solicitudes de recursos a otros sitios web, usando CORS (cross-origin resource sharing)
    instalamos la libreria correspondiente
    npm i cors --save
  12) Modificamos js.app
        const cors = require('cors');
        app.use(cors());
  13) Agregamos la funcion middleware express.json para analizar las solicitudes entrantes con contenido json
        app.use(express.json());
  14) Agregamos la funcion express.urlenconder para el analisis de solicitudes entrantes con url codificadas, la opcion extendida
        activada para anexar contenido enriquecido (arrays, etc)
        app.use(express.urlencoded({ extended: true }))
  15)
